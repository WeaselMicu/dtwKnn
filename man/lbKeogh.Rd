% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/lbKeogh.R
\name{lbKeogh}
\alias{envelope}
\alias{envelope.old}
\alias{lbKeogh}
\title{LB_Keogh}
\usage{
lbKeogh(x, y, win, returnSum = FALSE, cSum = FALSE, dropAttr = TRUE)

envelope(x, win, dropAttr = TRUE)

envelope.old(x, win, ...)
}
\arguments{
\item{x}{The reference data which can be a 1 or 2 dimensional. x must have the
same number of rows as y.
 vector or matrix-like object.}

\item{y}{The query data which can be a 1 or 2 dimensional
vector or matrix-like object, see details.}

\item{win}{A scaler integer for determining the window size for the upper
and lower bounds.}

\item{returnSum}{A bool which if TRUE sums the columns of the reference set x.}

\item{cSum}{A bool to determine if the column of the return value should be
cumulatively summed. cSum is over ridden if retunSum is TRUE. The only
expected use for cSum=TRUE is for the early abandoning of later index
searches.}

\item{dropAttr}{A bool which if set to false attempts to copy appropriate attributes.}

\item{...}{Not used.}
}
\description{
\code{lbKeogh} Compute the univariate or multivariate LB_Keogh on a
matrix-like object.




}
\details{
A lower bound for Dynamic Time Warping introduced by Keogh and
Ratanamahatana.  lbKeogh is a c-level utility that returns object of
different dimensions depending to the number of columns in x and the value of
returnSum.  If y has one dimension and x is a matrix-like
object then we compute the lbKeogh on each column in x using a window (win)
created on y. If y more than one column then the the ncols(y)==ncols(x) and a
lbKeogh will computed on each column of x with an envelope created on the matching
column of y.  With returnSum=FALSE we return an object with the same
dimensions as x otherwise we return a numeric vector length equal the number of
columns in x.  The default setting for dropAttr is FALSE.  Setting drapAttr=TRUE
attempts to duplicate all of the objects, if returnSum=FALSE or just the colnames
with returnSum=TRUE.

The distance used is Euclidean without the sqrt() calculation ie (x-y)^2. To
get the true distance simply take sqrt(lbKeogh(x,y,returnSum=TRUE)) or for the
multivariate version sqrt(sum(lbKeogh(x,y,returnSum=TRUE))).

envelope calculates the upper and lower bounds used in the lbKeogh. The old
implementation idea was introduced by Danial Lemire in 2009 (envelope.old). It has
been updated and imporved using Richard Harter's "ascending minima" algorithm;
more than doubling the original speed. The new version also handles cases when the
window is more than half the length of x. It returns a list containing the upper
and lower envelopes for each column in x.

For detailed information see:

\url{http://www.cs.ucr.edu/~eamonn/LB_Keogh.htm}.

\url{http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.14.6347&rep=rep1&type=pdf}.

\url{ttp://richardhartersworld.com/cri/2001/slidingmin.html}.
}
\examples{
set.seed(1001)
 x <- sapply(1:6,function(i) arima.sim(list(ar=c(.95)),n=500))
 colnames(x) <- paste0("k",1:6)

 k1 <- lbKeogh(x[,-1,drop=FALSE],x[,1],win=10,dropAttr=FALSE)
 matplot(k1,,'l')
 str(k1)
 k2 <- lbKeogh(x[,-1,drop=FALSE],x[,1],win=10,returnSum=TRUE)

 all.equal(colSums(k1),k2,check.attributes=FALSE)

 # multivariate
 k3 <- lbKeogh(x[,1:3,drop=FALSE],x[,4:6],win=10,dropAttr=FALSE)
 matplot(k3,,'l')
 str(k3)

 k4 <- lbKeogh(x[,1:3,drop=FALSE],x[,4:6],win=10,returnSum=TRUE)
 matplot(k4,,'l')
 str(k4)

 all.equal(colSums(k3),k4,check.attributes=FALSE)


 # check new envelope speed vs old.

 x <- sapply(1:6,function(i) arima.sim(list(ar=c(.95)),n=25000))

 system.time(e1 <- lapply(1:100, function(i) {envelope.old(x,20)}))
 system.time(e2 <- lapply(1:100, function(i) {envelope(x,20)}))

 all.equal(e1,e2,check.attributes=FALSE)
}
\author{
William Pleasant adapted from UCR Suite
\url{http://www.cs.ucr.edu/~eamonn/UCRsuite.html}
}
\references{
Keogh, E. (2002). Exact indexing of dynamic time warping. In 28th
International Conference on Very Large Data Bases. Hong Kong. pp 406-417.

Rath, Toni M., and R. Manmatha. "Lower-Bounding of Dynamic Time Warping
Distances for Multivariate Time Series."

"Faster Retrieval with a Two-Pass Dynamic-Time-Warping Lower Bound", Pattern
Recognition 42(9), 2009.
}

